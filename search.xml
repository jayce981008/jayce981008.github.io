<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>获取Docker Engine社区版 - Debian</title>
      <link href="/2020/04/08/docker/%E8%8E%B7%E5%8F%96Docker%20Engine%E7%A4%BE%E5%8C%BA%E7%89%88%20-%20Debian/"/>
      <url>/2020/04/08/docker/%E8%8E%B7%E5%8F%96Docker%20Engine%E7%A4%BE%E5%8C%BA%E7%89%88%20-%20Debian/</url>
      
        <content type="html"><![CDATA[<p>要开始在 Debian 上使用 Docker Engine-Community，请确保您 <a href="https://docs.docker.com/install/linux/docker-ce/debian/#prerequisites" target="_blank" rel="noopener">满足先决条件</a>，然后 安装 <a href="https://docs.docker.com/install/linux/docker-ce/debian/#install-docker-ce" target="_blank" rel="noopener">Docker</a>。</p><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><h3 id="操作系统要求"><a href="#操作系统要求" class="headerlink" title="操作系统要求"></a>操作系统要求</h3><p>要安装 Docker Engine-Community，您需要以下 Debian 或 Raspbian 版本之一的 64 位版本：</p><ul><li>Buster 10 (stable)</li><li>Stretch 9 / Raspbian Stretch</li></ul><p>Docker Engine-Community 在 <code>x86_64</code>（或 <code>amd64</code>）<code>armhf</code>，和 <code>arm64</code> 体系结构上受支持。</p><h3 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h3><p>Docker 的旧版本被称为<code>docker</code>，<code>docker.io</code>或<code>docker-engine</code>。如果已安装，请卸载它们：</p><pre><code class="bash">$ sudo apt-get remove docker docker-engine docker.io containerd runc</code></pre><p>如果<code>apt-get</code>报告未安装这些软件包，则可以。</p><p>的内容（<code>/var/lib/docker/</code>包括 images，containers，volumes 和 networks）被保留。 Docker Engine-Community 软件包现在称为<code>docker-ce</code>。</p><h2 id="安装-Docker-Engine-Community"><a href="#安装-Docker-Engine-Community" class="headerlink" title="安装 Docker Engine-Community"></a>安装 Docker Engine-Community</h2><p>您可以根据需要以不同的方式安装 Docker Engine-Community：</p><ul><li>大多数用户会 <a href="https://docs.docker.com/install/linux/docker-ce/debian/#install-using-the-repository" target="_blank" rel="noopener">设置 Docker 的存储库</a>并从中进行安装，以简化安装和升级任务。除 Raspbian 之外，这是推荐的方法。</li><li>一些用户下载并<a href="https://docs.docker.com/install/linux/docker-ce/debian/#install-from-a-package" target="_blank" rel="noopener">手动安装</a> DEB 软件包， 并完全手动管理升级。这在诸如在无法访问互联网的空白系统上安装 Docker 的情况下很有用。</li><li>在测试和开发环境中，一些用户选择使用自动 <a href="https://docs.docker.com/install/linux/docker-ce/debian/#install-using-the-convenience-script" target="_blank" rel="noopener">便利脚本</a>来安装 Docker。目前，这是 Raspbian 的唯一方法。</li></ul><h3 id="使用存储库安装"><a href="#使用存储库安装" class="headerlink" title="使用存储库安装"></a>使用存储库安装</h3><p>在新主机上首次安装 Docker Engine-Community 之前，需要设置 Docker 存储库。之后，您可以从存储库安装和更新 Docker。</p><blockquote><p><strong>Raspbian 用户不能使用此方法！</strong><br>对于 Raspbian，尚不支持使用存储库进行安装。您必须改为使用<a href="https://docs.docker.com/install/linux/docker-ce/debian/#install-using-the-convenience-script" target="_blank" rel="noopener">便捷脚本</a>。</p></blockquote><h4 id="设置存储库"><a href="#设置存储库" class="headerlink" title="设置存储库"></a>设置存储库</h4><ol><li>更新 apt 包索引：</li></ol><pre><code class="bash">$ sudo apt-get update</code></pre><ol start="2"><li>安装软件包以允许 apt 通过 HTTPS 使用存储库：</li></ol><pre><code class="bash">$ sudo apt-get install \    apt-transport-https \    ca-certificates \    curl \    gnupg-agent \    software-properties-common</code></pre><ol start="3"><li>添加 Docker 的官方 GPG 密钥：</li></ol><pre><code class="bash">$ curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -</code></pre><p><code>9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88</code>通过搜索指纹的后 8 个字符，验证您现在是否拥有带有指纹的密 钥 。</p><pre><code class="bash">$ sudo apt-key fingerprint 0EBFCD88pub   4096R/0EBFCD88 2017-02-22      Key fingerprint = 9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88uid                  Docker Release (CE deb) &lt;docker@docker.com&gt;sub   4096R/F273FCD8 2017-02-22</code></pre><ol start="4"><li>使用以下命令来设置<strong>stable</strong>的存储库。要添加 <strong>nightly</strong>或<strong>test</strong>存储库，请在以下命令中的单词后面添加<code>nightly</code>或<code>test</code>（或两者）<code>stable</code>。<a href="https://docs.docker.com/install/" target="_blank" rel="noopener">了解每晚和测试频道</a>。</li></ol><blockquote><p><strong>注意</strong>：下面的 <code>lsb_release -cs</code> 子命令返回 Debian 发行版的名称，例如 <code>helium</code>。有时，在诸如 BunsenLabs Linux 的发行版中，您可能需要更改<code>$(lsb_release -cs)</code> 为父 Debian 发行版。例如，如果您使用 <code>BunsenLabs Linux Helium</code>，则可以使用 <code>stretch</code>。Docker 对未经测试和不受支持的 Debian 发行版不提供任何保证。</p></blockquote><ul><li>x86_64 / amd64</li></ul><pre><code class="bash">$ sudo add-apt-repository \   &quot;deb [arch=amd64] https://download.docker.com/linux/debian \   $(lsb_release -cs) \   stable&quot;</code></pre><ul><li>armhf</li></ul><pre><code class="bash">$ sudo add-apt-repository \   &quot;deb [arch=armhf] https://download.docker.com/linux/debian \   $(lsb_release -cs) \   stable&quot;</code></pre><ul><li>arm64</li></ul><pre><code class="bash">$ sudo add-apt-repository \   &quot;deb [arch=arm64] https://download.docker.com/linux/debian \   $(lsb_release -cs) \   stable&quot;</code></pre><h4 id="安装-DOCKER-引擎"><a href="#安装-DOCKER-引擎" class="headerlink" title="安装 DOCKER 引擎"></a>安装 DOCKER 引擎</h4><blockquote><p><strong>注意</strong>：此过程适用于 x86_64/ amd64，Debian ARM 或 Raspbian 上的 Debian。</p></blockquote><ol><li>更新 <code>apt</code> 程序包索引，并安装最新版本的 Docker Engine 和容器，或转到下一步以安装特定版本：</li></ol><pre><code class="bash"> $ sudo apt-get update $ sudo apt-get install docker-ce docker-ce-cli containerd.io</code></pre><blockquote><p>有多个 Docker 存储库吗？<br>如果您启用了多个 Docker 存储库，则在未在 <code>apt-get install</code> 或 <code>apt-get update</code> 命令中指定版本的情况下进行安装或更新将始终安装可能的最高版本，这可能不适合您的稳定性需求。</p></blockquote><ol start="2"><li>要安装<em>特定版本</em>的 Docker Engine，请在存储库中列出可用版本，然后选择并安装：<br>a. 列出您的仓库中可用的版本：</li></ol><pre><code class="bash">$ apt-cache madison docker-ce  docker-ce | 5:18.09.1~3-0~debian-stretch | https://download.docker.com/linux/debian stretch/stable amd64 Packages  docker-ce | 5:18.09.0~3-0~debian-stretch | https://download.docker.com/linux/debian stretch/stable amd64 Packages  docker-ce | 18.06.1~ce~3-0~debian        | https://download.docker.com/linux/debian stretch/stable amd64 Packages  docker-ce | 18.06.0~ce~3-0~debian        | https://download.docker.com/linux/debian stretch/stable amd64 Packages  ...</code></pre><p>b. 使用第二列中的版本字符串安装特定版本，例如 <code>5:18.09.1~3-0~debian-stretch</code> 。</p><pre><code class="bash">$ sudo apt-get install docker-ce=&lt;VERSION_STRING&gt; docker-ce-cli=&lt;VERSION_STRING&gt; containerd.io</code></pre><ol start="3"><li>通过运行 <code>hello-world</code> 映像来验证是否正确安装了 Docker Engine 。</li></ol><pre><code class="bash">$ sudo docker run hello-world</code></pre><p>此命令下载测试图像并在容器中运行它。容器运行时，它会打印参考消息并退出。</p><p>Docker Engine 已安装并正在运行。该 <code>docker组</code> 已创建，但未添加任何用户。您需要使用 <code>sudo</code> 来运行 Docker 命令。继续进行<a href="https://docs.docker.com/engine/install/linux-postinstall/" target="_blank" rel="noopener">Linux postinstall</a>，以允许非特权用户运行 Docker 命令以及其他可选配置步骤。</p><h4 id="升级-DOCKER-引擎"><a href="#升级-DOCKER-引擎" class="headerlink" title="升级 DOCKER 引擎"></a>升级 DOCKER 引擎</h4><p>要升级 Docker Engine，请先运行 <code>sudo apt-get update</code>，然后按照 <a href="https://docs.docker.com/engine/install/debian/#install-using-the-repository" target="_blank" rel="noopener">安装说明进行操作</a>，选择要安装的新版本。</p><h3 id="从软件包安装"><a href="#从软件包安装" class="headerlink" title="从软件包安装"></a>从软件包安装</h3><p>如果您不能使用 Docker 的存储库来安装 Docker Engine，则可以下载 <code>.deb</code> 要发布的 文件并手动安装。每次升级 Docker 时，都需要下载一个新文件。</p><p>转到 <a href="https://download.docker.com/linux/debian/dists/" target="_blank" rel="noopener">https://download.docker.com/linux/debian/dists/</a>，选择你的 Debian 版本，然后浏览 <code>pool/stable/</code>，选择<code>amd64</code>， <code>armhf</code> 或 <code>arm64</code> 并下载 <code>.deb</code> 文件要安装 Debian 版本。</p><blockquote><p><strong>注意</strong>：要安装 <strong>nightly</strong> 或 <strong>test</strong>（预发布）软件包，<code>stable</code> 请将上述 URL 中的单词更改为 <code>nightly</code> 或 <code>test</code>。 <a href="https://docs.docker.com/engine/install/" target="_blank" rel="noopener">了解<strong>nightly</strong>和<strong>test</strong>频道</a>。</p></blockquote><ol start="2"><li>安装 Docker Engine，将以下路径更改为下载 Docker 软件包的路径。</li></ol><pre><code class="bash">$ sudo dpkg -i /path/to/package.deb</code></pre><p>Docker 守护程序会自动启动。</p><ol start="3"><li>通过运行 <code>hello-world</code> 映像来验证是否正确安装了 Docker Engine 。</li></ol><pre><code class="bash">$ sudo docker run hello-world</code></pre><p>此命令下载测试图像并在容器中运行它。容器运行时，它会打印参考消息并退出。</p><p>Docker Engine 已安装并正在运行。该 docker 组已创建，但未添加任何用户。您需要使用 sudo 来运行 Docker 命令。继续<a href="https://docs.docker.com/engine/install/linux-postinstall/" target="_blank" rel="noopener">执行 Linux postinstall 的安装步骤</a>，以允许非特权用户运行 Docker 命令以及其他可选配置步骤。</p><h4 id="升级-DOCKER-引擎-1"><a href="#升级-DOCKER-引擎-1" class="headerlink" title="升级 DOCKER 引擎"></a>升级 DOCKER 引擎</h4><p>要升级 Docker Engine，请下载更新的软件包文件，然后重复 <a href="https://docs.docker.com/engine/install/debian/#install-from-a-package" target="_blank" rel="noopener">安装过程</a>，指向新文件。</p><h3 id="使用便捷脚本安装"><a href="#使用便捷脚本安装" class="headerlink" title="使用便捷脚本安装"></a>使用便捷脚本安装</h3><p>Docker 在 <a href="https://get.docker.com/" target="_blank" rel="noopener">get.docker.com</a> 和 <a href="https://test.docker.com/" target="_blank" rel="noopener">test.docker.com</a> 上提供了便利脚本，用于将 Docker Engine-Community 的边缘版本和测试版本快速且非交互地安装到开发环境中。脚本的源代码在 <code>docker-install</code> <a href="https://github.com/docker/docker-install" target="_blank" rel="noopener">存储库中</a>。 <strong>不建议在生产环境中使用这些脚本</strong>，在使用它们之前，您应该了解潜在的风险：</p><ul><li>脚本需要运行 <code>root</code> 或具有 <code>sudo</code> 特权。因此，在运行脚本之前，应仔细检查和审核脚本。</li><li>这些脚本尝试检测 Linux 发行版和版本，并为您配置软件包管理系统。此外，脚本不允许您自定义任何安装参数。从 Docker 的角度或您自己组织的准则和标准的角度来看，这可能导致不支持的配置。</li><li>这些脚本将安装软件包管理器的所有依赖项和建议，而无需进行确认。根据主机的当前配置，这可能会安装大量软件包。</li><li>该脚本未提供用于指定要安装哪个版本的 Docker 的选项，而是安装了在“edge”通道中发布的最新版本。</li><li>如果已使用其他机制将 Docker 安装在主机上，请不要使用便捷脚本。</li></ul><p>本示例使用 <a href="https://get.docker.com/" target="_blank" rel="noopener">get.docker.com</a> 上的脚本在 <a href="https://get.docker.com/" target="_blank" rel="noopener">Linux</a> 上安装最新版本的 Docker Engine-Community。要安装最新的测试版本，请改用 <a href="https://test.docker.com/" target="_blank" rel="noopener">test.docker.com</a>。在下面的每个命令，取代每次出现 <code>get</code> 用 <code>test</code>。</p><blockquote><p><strong>警告</strong>：<br>在本地运行它们之前，请务必检查从 Internet 下载的脚本。</p></blockquote><pre><code class="bash">$ curl -fsSL https://get.docker.com -o get-docker.sh$ sudo sh get-docker.sh&lt;output truncated&gt;</code></pre><p>如果您想以非 root 用户身份使用 Docker，则现在应考虑使用类似以下方式将用户添加到“ docker”组：</p><pre><code class="bash">sudo usermod -aG docker your-user</code></pre><p>请记住注销并重新登录才能生效！</p><blockquote><p><strong>警告</strong>：<br>将用户添加到“docker”组后，他们可以运行容器，该容器可用于在 Docker 主机上获得 root 特权。 有关更多信息，请参考 <a href="https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface" target="_blank" rel="noopener">Docker Daemon Attack Surface</a>。</p></blockquote><p>Docker Engine - Community 安装后。它会自动在 <code>DEB</code> 基于发行版的系统上启动。在 <code>RPM</code> 基于发行版的系统上，您需要使用相应的 <code>systemctl</code> 或 <code>service</code> 命令手动启动它 。如消息所示，默认情况下，非 root 用户不能运行 Docker 命令。</p><blockquote><p><strong>注意事项</strong>：<br>要安装没有 root 特权的 <a href="https://docs.docker.com/engine/security/rootless/" target="_blank" rel="noopener">Docker</a>，<strong>请参阅</strong> <a href="https://docs.docker.com/engine/security/rootless/" target="_blank" rel="noopener">以非 root 用户身份运行 Docker 守护程序（无根模式）</a>。<br>无根模式目前可作为实验功能。</p></blockquote><h4 id="使用便捷脚本后升级-DOCKER"><a href="#使用便捷脚本后升级-DOCKER" class="headerlink" title="使用便捷脚本后升级 DOCKER"></a>使用便捷脚本后升级 DOCKER</h4><p>如果使用便捷脚本安装了 Docker，则应直接使用包管理器升级 Docker。重新运行便利程序脚本没有任何好处，如果尝试重新添加已经添加到主机的存储库，则可能导致问题。</p><h2 id="卸载-Docker"><a href="#卸载-Docker" class="headerlink" title="卸载 Docker"></a>卸载 Docker</h2><ol><li>卸载 Docker Engine，CLI 和 Containerd 软件包：</li></ol><pre><code class="bash">$ sudo apt-get purge docker-ce docker-ce-cli containerd.io</code></pre><ol start="2"><li>主机上的 images，containers，volumes 或自定义配置文件不会自动删除。要删除所有 images，containers 和 volumes：</li></ol><pre><code class="bash">$ sudo rm -rf /var/lib/docker</code></pre><p>您必须手动删除所有已编辑的配置文件。</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker Engine-Community </tag>
            
            <tag> Debian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Engine概述</title>
      <link href="/2020/04/08/docker/Docker%20Engine%E6%A6%82%E8%BF%B0/"/>
      <url>/2020/04/08/docker/Docker%20Engine%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<p>Docker Engine 是一种开源容器化技术，用于构建和容器化您的应用程序。Docker Engine 通过以下方式充当 client-server 应用程序：</p><ul><li>具有长时间运行的守护进程的服务器<a href="https://docs.docker.com/engine/reference/commandline/dockerd/" target="_blank" rel="noopener">dockerd</a>。</li><li>API，用于指定程序可以用来与 Docker 守护程序进行通信的接口。</li><li>命令行界面（CLI）客户端<a href="https://docs.docker.com/engine/reference/commandline/cli/" target="_blank" rel="noopener">docker</a>。</li></ul><p>CLI 使用 Docker API 通过脚本或直接 CLI 命令控制或与 Docker 守护程序进行交互。许多其他 Docker 应用程序都使用基础 API 和 CLI。守护程序创建和管理 Docker 对象，例如 images， containers， networks，和 volumes。</p><p>Docker Engine 具有三种类型的更新通道：<strong>Stable</strong>, <strong>Test</strong>, 和 <strong>Nightly</strong>:：</p><ul><li><strong>Stable</strong>可为您提供最新版本，以提供一般可用性。</li><li><strong>Test</strong>提供了预发布的版本，这些版本可以在正式发布之前进行测试。</li><li><strong>Nightly</strong>为您提供了下一个主要版本的最新工作进展。</li></ul><p>有关更多信息，请参见<a href="https://docs.docker.com/install/#release-channels" target="_blank" rel="noopener">发布渠道</a>。</p><h2 id="支持的平台"><a href="#支持的平台" class="headerlink" title="支持的平台"></a>支持的平台</h2><p>Docker Engine 可通过 Docker Desktop，Windows Server 以及各种静态二进制安装在各种 Linux 平台，<a href="https://docs.docker.com/docker-for-mac/install/" target="_blank" rel="noopener">Mac</a> 和<a href="https://docs.docker.com/docker-for-windows/install/" target="_blank" rel="noopener">Windows</a>上使用。在下面找到您喜欢的操作系统。</p><h3 id="桌面"><a href="#桌面" class="headerlink" title="桌面"></a>桌面</h3><table><thead><tr><th align="left">平台</th><th align="center">x86_64</th></tr></thead><tbody><tr><td align="left"><a href="https://docs.docker.com/docker-for-mac/install/" target="_blank" rel="noopener">Mac 版 Docker 桌面（macOS）</a></td><td align="center"><img src="https://docs.docker.com/install/images/green-check.svg"></td></tr><tr><td align="left"><a href="https://docs.docker.com/docker-for-windows/install/" target="_blank" rel="noopener">适用于 Windows 的 Docker 桌面（Microsoft Windows 10）</a></td><td align="center"><img src="https://docs.docker.com/install/images/green-check.svg"></td></tr></tbody></table><h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><table><thead><tr><th align="left">平台</th><th align="center">x86_64 / amd64</th><th align="center">ARM</th><th align="center">ARM64 / AARCH64</th><th align="center">IBM Power (ppc64le)</th><th align="center">IBM Z（s390x）</th></tr></thead><tbody><tr><td align="left"><a href="https://docs.docker.com/install/linux/docker-ce/centos/" target="_blank" rel="noopener">CentOS</a></td><td align="center"><img src="https://docs.docker.com/install/images/green-check.svg"></td><td align="center"></td><td align="center"><img src="https://docs.docker.com/install/images/green-check.svg"></td><td align="center"></td><td align="center"></td></tr><tr><td align="left"><a href="https://docs.docker.com/install/linux/docker-ce/debian/" target="_blank" rel="noopener">Debian</a></td><td align="center"><img src="https://docs.docker.com/install/images/green-check.svg"></td><td align="center"><img src="https://docs.docker.com/install/images/green-check.svg"></td><td align="center"><img src="https://docs.docker.com/install/images/green-check.svg"></td><td align="center"></td><td align="center"></td></tr><tr><td align="left"><a href="https://docs.docker.com/install/linux/docker-ce/fedora/" target="_blank" rel="noopener">Fedora</a></td><td align="center"><img src="https://docs.docker.com/install/images/green-check.svg"></td><td align="center"></td><td align="center"><img src="https://docs.docker.com/install/images/green-check.svg"></td><td align="center"></td><td align="center"></td></tr><tr><td align="left"><a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/" target="_blank" rel="noopener">Ubuntu</a></td><td align="center"><img src="https://docs.docker.com/install/images/green-check.svg"></td><td align="center"><img src="https://docs.docker.com/install/images/green-check.svg"></td><td align="center"><img src="https://docs.docker.com/install/images/green-check.svg"></td><td align="center"><img src="https://docs.docker.com/install/images/green-check.svg"></td><td align="center"><img src="https://docs.docker.com/install/images/green-check.svg"></td></tr></tbody></table><h2 id="发布渠道"><a href="#发布渠道" class="headerlink" title="发布渠道"></a>发布渠道</h2><h3 id="Stable"><a href="#Stable" class="headerlink" title="Stable"></a>Stable</h3><p>年月发布是通过与主分支不同的发布分支进行的。<code>&lt;year&gt;.&lt;month&gt;</code>例如， 使用格式创建分支<code>18.09</code>。年-月名称表示预期最早发布的最早日历月。所有其他补丁程序发行均从该分支机构执行。例如，一旦<code>v18.09.0</code>发布，所有后续的修补程序版本都是从<code>18.09</code>分支构建的。</p><h3 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h3><p>为准备新的月份发布，<code>YY.mm</code>当 Docker 期望该发行版的里程碑完成功能后，将从 master 分支创建具有格式的分支。Beta 版和候选发行版等预发行版是从各自的发行分支进行的。补丁发布和相应的预发布是从相应的发布分支中执行的。</p><blockquote><p><strong>注意：</strong> 虽然完成了预发行以协助稳定过程，但不提供任何保证。</p></blockquote><p><code>test-YY.mm</code>例如，可以使用指定格式在测试渠道中针对目标年份月份发布用于预发布的二进制文件<code>test-18.09</code>。</p><h3 id="Nightly"><a href="#Nightly" class="headerlink" title="Nightly"></a>Nightly</h3><p>Nightly 构建会为您提供下一个主要版本的最新工作进展。它们每天从 master 分支创建一次，版本格式为：</p><pre><code>    0.0.0-YYYYmmddHHMMSS-abcdefabcdef</code></pre><p>例如，其中时间是 UTC 的提交时间，最后的后缀是提交哈希的前缀<code>0.0.0-20180720214833-f61e0f7</code>。</p><p>这些构建允许从 master 分支上的最新代码进行测试。</p><blockquote><p><strong>注意：</strong> 夜间构建不具备任何条件或保证。</p></blockquote><p>这些构建的发布渠道称为<code>nightly</code>。</p><h2 id="支持"><a href="#支持" class="headerlink" title="支持"></a>支持</h2><p>在第一个年度月份的通用可用性版本发布后的 7 个月内，将根据需要对 Docker Engine 年度版本的分支发布版本进行支持。</p><p>这意味着将在生命周期结束之前评估错误报告和向后发布分支的反向移植。</p><p>年月分支的寿命终止后，可以从存储库中删除该分支。</p><h2 id="向后移植"><a href="#向后移植" class="headerlink" title="向后移植"></a>向后移植</h2><p>Docker 公司优先考虑向 Docker 产品的反向移植。Docker 员工或存储库维护人员将尽力确保将合理的错误修正纳入有效发行版。</p><p>如果有一些重要的修订应考虑向后移植到活动版本分支，请确保在 PR 说明中突出显示此内容，或在 PR 中添加注释。</p><h2 id="升级路径"><a href="#升级路径" class="headerlink" title="升级路径"></a>升级路径</h2><p>修补程序版本始终与其年份月份版本向后兼容。</p><h2 id="许可"><a href="#许可" class="headerlink" title="许可"></a>许可</h2><p>Docker 已获得 Apache 许可证 2.0 版的许可。有关完整的许可证文本，请参阅 <a href="https://github.com/moby/moby/blob/master/LICENSE" target="_blank" rel="noopener">LICENSE</a>。</p><h2 id="报告安全问题"><a href="#报告安全问题" class="headerlink" title="报告安全问题"></a>报告安全问题</h2><p>Docker 维护人员非常重视安全性。如果发现安全问题，请立即引起他们的注意！</p><p>请不要提出公开问题；而是将您的报告私下发送到 <a href="mailto:security@docker.com">security@docker.com</a>。</p><p>非常感谢安全报告，Docker 会公开感谢您。</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>设置 Docker 之后，您可以通过<a href="https://docs.docker.com/get-started/" target="_blank" rel="noopener">Docker</a>入门学习基础知识 。</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Docker Engine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Awesome Software</title>
      <link href="/2020/04/08/awesome-software/"/>
      <url>/2020/04/08/awesome-software/</url>
      
        <content type="html"><![CDATA[<h2 id="Cross-Platform"><a href="#Cross-Platform" class="headerlink" title="Cross Platform"></a>Cross Platform</h2><p>支持多个平台很棒的软件</p><h3 id="Google-Chrome"><a href="#Google-Chrome" class="headerlink" title="Google Chrome"></a>Google Chrome</h3><p>最好的浏览器</p><p><a href="https://www.google.cn/chrome/" target="_blank" rel="noopener">https://www.google.cn/chrome/</a></p><h4 id="不错的插件"><a href="#不错的插件" class="headerlink" title="不错的插件"></a>不错的插件</h4><ul><li>JSON-handle</li><li>Vue.js devtools</li><li>React Developer Tools</li></ul><h3 id="Visual-Studio-Code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a>Visual Studio Code</h3><p>小巧，拓展性好</p><p><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></p><h3 id="JetBrains"><a href="#JetBrains" class="headerlink" title="JetBrains"></a>JetBrains</h3><p>JetBrains 的粉丝，每一款 IDE 都觉得是最好用的，功能强大</p><h4 id="IntelliJ-IDEA"><a href="#IntelliJ-IDEA" class="headerlink" title="IntelliJ IDEA"></a>IntelliJ IDEA</h4><p><a href="https://www.jetbrains.com/zh-cn/idea/" target="_blank" rel="noopener">https://www.jetbrains.com/zh-cn/idea/</a></p><h4 id="PhpStorm"><a href="#PhpStorm" class="headerlink" title="PhpStorm"></a>PhpStorm</h4><p><a href="https://www.jetbrains.com/zh-cn/phpstorm/" target="_blank" rel="noopener">https://www.jetbrains.com/zh-cn/phpstorm/</a></p><h4 id="WebStorm"><a href="#WebStorm" class="headerlink" title="WebStorm"></a>WebStorm</h4><p><a href="https://www.jetbrains.com/zh-cn/webstorm/" target="_blank" rel="noopener">https://www.jetbrains.com/zh-cn/webstorm/</a></p><h4 id="GoLand"><a href="#GoLand" class="headerlink" title="GoLand"></a>GoLand</h4><p><a href="https://www.jetbrains.com/zh-cn/go/" target="_blank" rel="noopener">https://www.jetbrains.com/zh-cn/go/</a></p><h4 id="PyCharm"><a href="#PyCharm" class="headerlink" title="PyCharm"></a>PyCharm</h4><p><a href="https://www.jetbrains.com/zh-cn/pycharm/" target="_blank" rel="noopener">https://www.jetbrains.com/zh-cn/pycharm/</a></p><h3 id="Android-Studio"><a href="#Android-Studio" class="headerlink" title="Android Studio"></a>Android Studio</h3><p>开发安卓应用</p><p><a href="https://developer.android.google.cn/studio" target="_blank" rel="noopener">https://developer.android.google.cn/studio</a></p><h4 id="不错的插件-1"><a href="#不错的插件-1" class="headerlink" title="不错的插件"></a>不错的插件</h4><ul><li>Flutter (开发 Flutter 应用)</li></ul><h3 id="Navicat-Premium"><a href="#Navicat-Premium" class="headerlink" title="Navicat Premium"></a>Navicat Premium</h3><p>数据库管理工具</p><p><a href="https://www.navicat.com.cn/products/navicat-premium" target="_blank" rel="noopener">https://www.navicat.com.cn/products/navicat-premium</a></p><h3 id="Postman"><a href="#Postman" class="headerlink" title="Postman"></a>Postman</h3><p>接口测试</p><p><a href="https://www.postman.com/" target="_blank" rel="noopener">https://www.postman.com/</a></p><h3 id="Docker-Desktop"><a href="#Docker-Desktop" class="headerlink" title="Docker Desktop"></a>Docker Desktop</h3><p>应用容器引擎</p><p><a href="https://www.docker.com/products/docker-desktop" target="_blank" rel="noopener">https://www.docker.com/products/docker-desktop</a></p><h3 id="XMind"><a href="#XMind" class="headerlink" title="XMind"></a>XMind</h3><p>思维导图</p><p><a href="https://www.xmind.cn/" target="_blank" rel="noopener">https://www.xmind.cn/</a></p><h3 id="Motrix"><a href="#Motrix" class="headerlink" title="Motrix"></a>Motrix</h3><p>下载工具</p><p><a href="https://motrix.app/" target="_blank" rel="noopener">https://motrix.app/</a></p><h2 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h2><h3 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h3><p>包管理器</p><p><a href="https://brew.sh/" target="_blank" rel="noopener">https://brew.sh/</a></p><h4 id="国内镜像"><a href="#国内镜像" class="headerlink" title="国内镜像"></a>国内镜像</h4><p>中科大源：<a href="http://mirrors.ustc.edu.cn/help/brew.git.html" target="_blank" rel="noopener">http://mirrors.ustc.edu.cn/help/brew.git.html</a></p><h3 id="Xcode"><a href="#Xcode" class="headerlink" title="Xcode"></a>Xcode</h3><p>开发 iOS, macOS 应用</p><h3 id="Medis"><a href="#Medis" class="headerlink" title="Medis"></a>Medis</h3><p>Redis GUI 管理工具</p><p><a href="http://getmedis.com/" target="_blank" rel="noopener">http://getmedis.com/</a></p><h3 id="ShadowsocksX-NG"><a href="#ShadowsocksX-NG" class="headerlink" title="ShadowsocksX-NG"></a>ShadowsocksX-NG</h3><p><a href="https://github.com/shadowsocks/ShadowsocksX-NG" target="_blank" rel="noopener">https://github.com/shadowsocks/ShadowsocksX-NG</a></p><h3 id="The-Unarchiver"><a href="#The-Unarchiver" class="headerlink" title="The Unarchiver"></a>The Unarchiver</h3><p>压缩软件</p><p><a href="https://www.theunarchiver.com/" target="_blank" rel="noopener">https://www.theunarchiver.com/</a></p><h3 id="Sketch"><a href="#Sketch" class="headerlink" title="Sketch"></a>Sketch</h3><p>原型设计</p><p><a href="https://www.sketch.com/" target="_blank" rel="noopener">https://www.sketch.com/</a></p><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><h3 id="Shadowsocks-for-Windows"><a href="#Shadowsocks-for-Windows" class="headerlink" title="Shadowsocks for Windows"></a>Shadowsocks for Windows</h3><p><a href="https://github.com/shadowsocks/shadowsocks-windows" target="_blank" rel="noopener">https://github.com/shadowsocks/shadowsocks-windows</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/04/06/hello-world/"/>
      <url>/2020/04/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
